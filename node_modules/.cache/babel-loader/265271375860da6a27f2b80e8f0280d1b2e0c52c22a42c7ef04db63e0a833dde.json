{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import{Doughnut}from\"react-chartjs-2\";import\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Graphbox=_ref=>{let{datasource}=_ref;const[doughnutData,setDoughnutData]=useState(null);useEffect(()=>{if(!datasource||!Array.isArray(datasource)||datasource.length===0){return;// Ne rien faire si datasource est vide ou non défini\n}const labels=datasource.map(entry=>entry.nom_plante);const data=datasource.map(entry=>entry.pourcentage_utilisation);const backgroundColors=generateRandomColors(datasource.length);const newDoughnutData={labels:labels,datasets:[{label:\"Statistiques des plantes\",data:data,backgroundColor:backgroundColors,hoverBackgroundColor:backgroundColors}]};setDoughnutData(newDoughnutData);},[datasource]);const generateRandomColors=count=>{const colors=[];for(let i=0;i<count;i++){const color=\"#\"+Math.floor(Math.random()*16777215).toString(16);colors.push(color);}return colors;};return/*#__PURE__*/_jsxs(\"div\",{className:\"float-bloc-graph\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"greet\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Statistiques utilisation des plantes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtitle\",children:\"Statistiques des plantes utilis\\xE9es/plant\\xE9es\"})]}),doughnutData&&/*#__PURE__*/_jsx(Doughnut,{data:doughnutData})]});};export default Graphbox;","map":{"version":3,"names":["React","useEffect","useRef","useState","Doughnut","jsx","_jsx","jsxs","_jsxs","Graphbox","_ref","datasource","doughnutData","setDoughnutData","Array","isArray","length","labels","map","entry","nom_plante","data","pourcentage_utilisation","backgroundColors","generateRandomColors","newDoughnutData","datasets","label","backgroundColor","hoverBackgroundColor","count","colors","i","color","Math","floor","random","toString","push","className","children"],"sources":["/Users/macbook/Documents/git clones/crop_farm_back_office/src/component/card/statbox/Graphbox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./index.css\";\n\nconst Graphbox = ({ datasource }) => {\n  const [doughnutData, setDoughnutData] = useState(null);\n\n  useEffect(() => {\n    if (!datasource || !Array.isArray(datasource) || datasource.length === 0) {\n      return; // Ne rien faire si datasource est vide ou non défini\n    }\n\n    const labels = datasource.map((entry) => entry.nom_plante);\n    const data = datasource.map((entry) => entry.pourcentage_utilisation);\n    const backgroundColors = generateRandomColors(datasource.length);\n\n    const newDoughnutData = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Statistiques des plantes\",\n          data: data,\n          backgroundColor: backgroundColors,\n          hoverBackgroundColor: backgroundColors,\n        },\n      ],\n    };\n\n    setDoughnutData(newDoughnutData);\n  }, [datasource]);\n\n  const generateRandomColors = (count) => {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      colors.push(color);\n    }\n    return colors;\n  };\n\n  return (\n    <div className=\"float-bloc-graph\">\n      <div className=\"greet\">\n        <div className=\"title\">Statistiques utilisation des plantes</div>\n        <div className=\"subtitle\">\n          Statistiques des plantes utilisées/plantées\n        </div>\n      </div>\n      {doughnutData && <Doughnut data={doughnutData} />}\n    </div>\n  );\n};\n\nexport default Graphbox;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAEtDF,SAAS,CAAC,IAAM,CACd,GAAI,CAACU,UAAU,EAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAIA,UAAU,CAACK,MAAM,GAAK,CAAC,CAAE,CACxE,OAAQ;AACV,CAEA,KAAM,CAAAC,MAAM,CAAGN,UAAU,CAACO,GAAG,CAAEC,KAAK,EAAKA,KAAK,CAACC,UAAU,CAAC,CAC1D,KAAM,CAAAC,IAAI,CAAGV,UAAU,CAACO,GAAG,CAAEC,KAAK,EAAKA,KAAK,CAACG,uBAAuB,CAAC,CACrE,KAAM,CAAAC,gBAAgB,CAAGC,oBAAoB,CAACb,UAAU,CAACK,MAAM,CAAC,CAEhE,KAAM,CAAAS,eAAe,CAAG,CACtBR,MAAM,CAAEA,MAAM,CACdS,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,0BAA0B,CACjCN,IAAI,CAAEA,IAAI,CACVO,eAAe,CAAEL,gBAAgB,CACjCM,oBAAoB,CAAEN,gBACxB,CAAC,CAEL,CAAC,CAEDV,eAAe,CAACY,eAAe,CAAC,CAClC,CAAC,CAAE,CAACd,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAa,oBAAoB,CAAIM,KAAK,EAAK,CACtC,KAAM,CAAAC,MAAM,CAAG,EAAE,CACjB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,KAAK,CAAEE,CAAC,EAAE,CAAE,CAC9B,KAAM,CAAAC,KAAK,CAAG,GAAG,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CACrEN,MAAM,CAACO,IAAI,CAACL,KAAK,CAAC,CACpB,CACA,MAAO,CAAAF,MAAM,CACf,CAAC,CAED,mBACEvB,KAAA,QAAK+B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhC,KAAA,QAAK+B,SAAS,CAAC,OAAO,CAAAC,QAAA,eACpBlC,IAAA,QAAKiC,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,sCAAoC,CAAK,CAAC,cACjElC,IAAA,QAAKiC,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,mDAE1B,CAAK,CAAC,EACH,CAAC,CACL5B,YAAY,eAAIN,IAAA,CAACF,QAAQ,EAACiB,IAAI,CAAET,YAAa,CAAE,CAAC,EAC9C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}