{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react-results/crop-farm/src/component/card/statbox/Graphbox.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\"; // Importez le composant Doughnut de react-chartjs-2\nimport \"./index.css\";\nimport React, { useEffect, useRef } from \"react\";\n// import Chart from \"chart.js/auto\"; // Importez votre fichier CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graphbox = ({\n  datasource\n}) => {\n  _s();\n  // Données des statistiques des plantes\n  useEffect(() => {\n    if (!datasource || !Array.isArray(datasource) || datasource.length === 0) {\n      return; // Ne rien faire si datasource est vide ou non défini\n    }\n    const labels = datasource.map(entry => entry.nom_plante);\n    const data = datasource.map(entry => entry.pourcentage_utilisation);\n    const backgroundColors = generateRandomColors(datasource.length);\n    const doughnutData = {\n      labels: labels,\n      datasets: [{\n        label: \"Statistiques des plantes\",\n        data: data,\n        backgroundColor: backgroundColors,\n        hoverBackgroundColor: backgroundColors\n      }]\n    };\n  }, [datasource]);\n  const generateRandomColors = count => {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      colors.push(color);\n    }\n    return colors;\n  };\n  const data = {\n    labels: [\"Fraise\", \"Banane\", \"Pomme\", \"Orange\", \"Citron\"],\n    datasets: [{\n      label: \"Statistiques des plantes\",\n      data: [10, 11, 20, 15, 12],\n      // Exemple de données (en pourcentage)\n      backgroundColor: [\"#FF6384\",\n      // Couleur pour Fraise\n      \"#36A2EB\",\n      // Couleur pour Banane\n      \"#FFCE56\",\n      // Couleur pour Pomme\n      \"#4BC0C0\",\n      // Couleur pour Orange\n      \"#9966FF\" // Couleur pour Citron\n      ],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"float-bloc-graph\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Statistiques du mois\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Statistiques des plantes utilis\\xE9es/plant\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: doughnutData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Graphbox, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Graphbox;\nexport default Graphbox;\nvar _c;\n$RefreshReg$(_c, \"Graphbox\");","map":{"version":3,"names":["Doughnut","React","useEffect","useRef","jsxDEV","_jsxDEV","Graphbox","datasource","_s","Array","isArray","length","labels","map","entry","nom_plante","data","pourcentage_utilisation","backgroundColors","generateRandomColors","doughnutData","datasets","label","backgroundColor","hoverBackgroundColor","count","colors","i","color","Math","floor","random","toString","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/react-results/crop-farm/src/component/card/statbox/Graphbox.js"],"sourcesContent":["// import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\"; // Importez le composant Doughnut de react-chartjs-2\nimport \"./index.css\";\nimport React, { useEffect, useRef } from \"react\";\n// import Chart from \"chart.js/auto\"; // Importez votre fichier CSS\n\nconst Graphbox = ({ datasource }) => {\n  // Données des statistiques des plantes\n  useEffect(() => {\n    if (!datasource || !Array.isArray(datasource) || datasource.length === 0) {\n      return; // Ne rien faire si datasource est vide ou non défini\n    }\n    const labels = datasource.map(entry => entry.nom_plante);\n    const data = datasource.map(entry => entry.pourcentage_utilisation);\n    const backgroundColors = generateRandomColors(datasource.length);\n\n    const doughnutData = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Statistiques des plantes\",\n          data: data,\n          backgroundColor: backgroundColors,\n          hoverBackgroundColor: backgroundColors,\n        },\n      ],\n    };\n  \n  }, [datasource]);\n\n  const generateRandomColors = (count) => {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      colors.push(color);\n    }\n    return colors;\n  };\n\n  \n\n  const data = {\n    labels: [\"Fraise\", \"Banane\", \"Pomme\", \"Orange\", \"Citron\"],\n    datasets: [\n      {\n        label: \"Statistiques des plantes\",\n        data: [10, 11, 20, 15, 12], // Exemple de données (en pourcentage)\n        backgroundColor: [\n          \"#FF6384\", // Couleur pour Fraise\n          \"#36A2EB\", // Couleur pour Banane\n          \"#FFCE56\", // Couleur pour Pomme\n          \"#4BC0C0\", // Couleur pour Orange\n          \"#9966FF\", // Couleur pour Citron\n        ],\n        hoverBackgroundColor: [\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#4BC0C0\",\n          \"#9966FF\",\n        ],\n      },\n    ],\n  };\n\n  return (\n    <div className=\"float-bloc-graph\">\n      <div className=\"greet\">\n        <div className=\"title\">Statistiques du mois</div>\n        <div className=\"subtitle\">Statistiques des plantes utilisées/plantées</div>\n      </div>\n      <Doughnut data={doughnutData} />\n    </div>\n  );\n};\n\nexport default Graphbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}