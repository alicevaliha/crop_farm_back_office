{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react-results/crop-farm/src/component/card/listbox/ListCategorie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios'; // Importez axios ici\nimport \"./index.css\"; // Importez votre fichier CSS\nimport DeleteButton from \"../../elements/button/Deletebutton.js\";\nimport Listinfo from \"../../elements/list-info/ListInfo.js\";\nimport ListCategorie from \"../../elements/list-info/ListCategorie.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListeCategorie = () => {\n  _s();\n  var _categories$data;\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    let request2 = \"https://cropfarmback-production.up.railway.app/api/categorie/cultures\";\n    axios.get(request2).then(response => {\n      setCategories(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log('Erreur lors de la récupération des catégories de plantes :', error);\n    });\n  }, []);\n  useEffect(() => {\n\n    // let request = \"https://cropfarmback-production.up.railway.app/plantes/\";\n    // request += idplante;\n    // console.log(request);\n    // axios.get(request)\n    // .then(response => {\n    //   // Mettez à jour l'état avec les données récupérées depuis l'API\n    //   setDataterrain(response.data);\n    //   console.log(dataterrain.nom_plante);\n    // })\n    // .catch(error => {\n    //   console.log('Erreur lors de la récupération des plantes non valides :', error);\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-bloc-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Toutes les cat\\xE9gories de Plantes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle\",\n          children: \"Jettez un coup d'oeuil \\xE0 toutes ces cat\\xE9gories !!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: (_categories$data = categories.data) === null || _categories$data === void 0 ? void 0 : _categories$data.map(categorie => /*#__PURE__*/_jsxDEV(ListCategorie, {\n            essai: \"lol\",\n            nom: categorie.nomcategorie,\n            id: categorie.id_categorie_culture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(ListeCategorie, \"yo5tL3zIdpNJlQqNXoBRGgAZOCA=\");\n_c = ListeCategorie;\nexport default ListeCategorie;\nvar _c;\n$RefreshReg$(_c, \"ListeCategorie\");","map":{"version":3,"names":["React","useState","useEffect","axios","DeleteButton","Listinfo","ListCategorie","jsxDEV","_jsxDEV","Fragment","_Fragment","ListeCategorie","_s","_categories$data","categories","setCategories","request2","get","then","response","data","console","log","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","categorie","essai","nom","nomcategorie","id","id_categorie_culture","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/react-results/crop-farm/src/component/card/listbox/ListCategorie.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios'; // Importez axios ici\nimport \"./index.css\"; // Importez votre fichier CSS\nimport DeleteButton from \"../../elements/button/Deletebutton.js\"\nimport Listinfo from \"../../elements/list-info/ListInfo.js\";\nimport ListCategorie from \"../../elements/list-info/ListCategorie.js\";\n\nconst ListeCategorie = () => {\n\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    let request2 = \"https://cropfarmback-production.up.railway.app/api/categorie/cultures\";\n    axios.get(request2)\n      .then(response => {\n        setCategories(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log('Erreur lors de la récupération des catégories de plantes :', error);\n      });\n  }, []);\n \n  useEffect(() => {\n\n\n    // let request = \"https://cropfarmback-production.up.railway.app/plantes/\";\n    // request += idplante;\n    // console.log(request);\n    // axios.get(request)\n    // .then(response => {\n    //   // Mettez à jour l'état avec les données récupérées depuis l'API\n    //   setDataterrain(response.data);\n    //   console.log(dataterrain.nom_plante);\n    // })\n    // .catch(error => {\n    //   console.log('Erreur lors de la récupération des plantes non valides :', error);\n    // });\n\n    \n  }, []);\n  return (\n    <>\n    <div className=\"float-bloc-list\">\n        <div className=\"greet\" >\n            <div className=\"title\">Toutes les catégories de Plantes</div>\n            <div className=\"subtitle\">Jettez un coup d'oeuil à toutes ces catégories !!</div>\n        </div>\n        <ul>\n        <li>\n        {categories.data?.map(categorie => (\n          <ListCategorie essai=\"lol\" nom={categorie.nomcategorie} id={categorie.id_categorie_culture} />\n        ))}\n        </li>\n        </ul>\n    </div>\n    \n    </>\n  );\n};\n\nexport default ListeCategorie;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,aAAa,CAAC,CAAC;AACtB,OAAOC,YAAY,MAAM,uCAAuC;AAChE,OAAOC,QAAQ,MAAM,sCAAsC;AAC3D,OAAOC,aAAa,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAE3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIc,QAAQ,GAAG,uEAAuE;IACtFb,KAAK,CAACc,GAAG,CAACD,QAAQ,CAAC,CAChBE,IAAI,CAACC,QAAQ,IAAI;MAChBJ,aAAa,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAEE,KAAK,CAAC;IAClF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;;IAGd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CAGD,EAAE,EAAE,CAAC;EACN,oBACEM,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACAjB,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5BjB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAD,QAAA,gBAClBjB,OAAA;UAAKkB,SAAS,EAAC,OAAO;UAAAD,QAAA,EAAC;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DtB,OAAA;UAAKkB,SAAS,EAAC,UAAU;UAAAD,QAAA,EAAC;QAAiD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACNtB,OAAA;QAAAiB,QAAA,eACAjB,OAAA;UAAAiB,QAAA,GAAAZ,gBAAA,GACCC,UAAU,CAACM,IAAI,cAAAP,gBAAA,uBAAfA,gBAAA,CAAiBkB,GAAG,CAACC,SAAS,iBAC7BxB,OAAA,CAACF,aAAa;YAAC2B,KAAK,EAAC,KAAK;YAACC,GAAG,EAAEF,SAAS,CAACG,YAAa;YAACC,EAAE,EAAEJ,SAAS,CAACK;UAAqB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC9F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBAEJ,CAAC;AAEP,CAAC;AAAClB,EAAA,CApDID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}