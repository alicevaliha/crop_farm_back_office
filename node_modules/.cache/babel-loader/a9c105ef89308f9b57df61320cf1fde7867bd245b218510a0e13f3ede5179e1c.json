{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react-results/crop-farm/src/component/box/board/PlantBoard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./index.css\";\nimport Ad from \"../../elements/ad/Ad\";\nimport Listbox from \"../../card/listbox/Listbox.js\";\nimport Quotes from \"../../elements/quote/Quote.js\";\nimport Form from \"../../form/Form.js\";\nimport LessPlant from \"../../elements/list-info/LessPlant.js\";\nimport MoreButton from \"../../elements/button/MoreButton.js\";\nimport CardPhoto from \"../../card/card-photo/CardPhoto.js\";\nimport FormPlante from \"../../form/FormPlante.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [terrainsValides, setTerrainsValides] = useState([]);\n  useEffect(() => {\n    // Récupérer le nom d'utilisateur depuis le localStorage lors du montage du composant\n    let storedId = localStorage.getItem(\"userId\");\n    let request = \"https://cropfarmback-production.up.railway.app/terrains/proprietaire/valid/\";\n    request += storedId;\n    console.log(request);\n    axios.get(request).then(response => {\n      // Mettez à jour l'état avec les données récupérées depuis l'API\n      setTerrainsValides(response.data);\n    }).catch(error => {\n      console.log('Erreur lors de la récupération des terrains non valides :', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-board\",\n      children: [/*#__PURE__*/_jsxDEV(Ad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LessPlant, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"grid-container-det-plant\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"item \",\n          children: /*#__PURE__*/_jsxDEV(FormPlante, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"item \",\n          children: /*#__PURE__*/_jsxDEV(Quotes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(Board, \"EKmGVRLkk+GgJKBinRNHVzdZmb0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Ad","Listbox","Quotes","Form","LessPlant","MoreButton","CardPhoto","FormPlante","jsxDEV","_jsxDEV","Board","_s","terrainsValides","setTerrainsValides","useState","useEffect","storedId","localStorage","getItem","request","console","log","axios","get","then","response","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/react-results/crop-farm/src/component/box/board/PlantBoard.js"],"sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport Ad from \"../../elements/ad/Ad\";\nimport Listbox from \"../../card/listbox/Listbox.js\"\nimport Quotes from \"../../elements/quote/Quote.js\";\nimport  Form from \"../../form/Form.js\"\nimport LessPlant from \"../../elements/list-info/LessPlant.js\";\nimport MoreButton from \"../../elements/button/MoreButton.js\";\nimport CardPhoto from \"../../card/card-photo/CardPhoto.js\";\nimport FormPlante from \"../../form/FormPlante.js\";\n\nconst Board = () => {\n  const [terrainsValides, setTerrainsValides] = useState([]);\n\n  useEffect(() => {\n    // Récupérer le nom d'utilisateur depuis le localStorage lors du montage du composant\n    let storedId = localStorage.getItem(\"userId\");\n    let request = \"https://cropfarmback-production.up.railway.app/terrains/proprietaire/valid/\";\n    request += storedId;\n    \n    console.log(request);\n\n    axios.get(request)\n    .then(response => {\n      // Mettez à jour l'état avec les données récupérées depuis l'API\n      setTerrainsValides(response.data);\n    })\n    .catch(error => {\n      console.log('Erreur lors de la récupération des terrains non valides :', error);\n    });\n\n    \n  }, []);\n\n  return (\n  <div className=\"container\">\n    <div className=\"background-board\">\n        <Ad/>\n\n        <LessPlant/>\n\n        <div class=\"grid-container-det-plant\">\n            <div class=\"item \"><FormPlante/></div>\n            <div class=\"item \"><Quotes/></div>\n        </div>\n\n    </div>\n\n   \n        \n  </div>\n);\n}\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,EAAE,MAAM,sBAAsB;AACrC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAQC,IAAI,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,IAAIC,OAAO,GAAG,6EAA6E;IAC3FA,OAAO,IAAIH,QAAQ;IAEnBI,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IAEpBG,KAAK,CAACC,GAAG,CAACJ,OAAO,CAAC,CACjBK,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAZ,kBAAkB,CAACY,QAAQ,CAACC,IAAI,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdR,OAAO,CAACC,GAAG,CAAC,2DAA2D,EAAEO,KAAK,CAAC;IACjF,CAAC,CAAC;EAGJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBrB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BrB,OAAA,CAACT,EAAE;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAELzB,OAAA,CAACL,SAAS;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEZzB,OAAA;QAAK0B,KAAK,EAAC,0BAA0B;QAAAL,QAAA,gBACjCrB,OAAA;UAAK0B,KAAK,EAAC,OAAO;UAAAL,QAAA,eAACrB,OAAA,CAACF,UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCzB,OAAA;UAAK0B,KAAK,EAAC,OAAO;UAAAL,QAAA,eAACrB,OAAA,CAACP,MAAM;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIH,CAAC;AAER,CAAC;AAAAvB,EAAA,CAzCKD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}