{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react-results/crop-farm/src/component/card/statbox/Graphbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graphbox = ({\n  datasource\n}) => {\n  _s();\n  const [doughnutData, setDoughnutData] = useState(null);\n  useEffect(() => {\n    if (!datasource || !Array.isArray(datasource) || datasource.length === 0) {\n      return; // Ne rien faire si datasource est vide ou non défini\n    }\n    const labels = datasource.map(entry => entry.nom_plante);\n    const data = datasource.map(entry => entry.pourcentage_utilisation);\n    const backgroundColors = generateRandomColors(datasource.length);\n    const newDoughnutData = {\n      labels: labels,\n      datasets: [{\n        label: \"Statistiques des plantes\",\n        data: data,\n        backgroundColor: backgroundColors,\n        hoverBackgroundColor: backgroundColors\n      }]\n    };\n    setDoughnutData(newDoughnutData);\n  }, [datasource]);\n  const generateRandomColors = count => {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      colors.push(color);\n    }\n    return colors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"float-bloc-graph\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Statistiques utilisation des plantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Statistiques des plantes utilis\\xE9es/plant\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), doughnutData && /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: doughnutData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Graphbox, \"nkwonRm/b/mQoqgXgbPK9A0xFuU=\");\n_c = Graphbox;\nexport default Graphbox;\nvar _c;\n$RefreshReg$(_c, \"Graphbox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Doughnut","jsxDEV","_jsxDEV","Graphbox","datasource","_s","doughnutData","setDoughnutData","Array","isArray","length","labels","map","entry","nom_plante","data","pourcentage_utilisation","backgroundColors","generateRandomColors","newDoughnutData","datasets","label","backgroundColor","hoverBackgroundColor","count","colors","i","color","Math","floor","random","toString","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/react-results/crop-farm/src/component/card/statbox/Graphbox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"./index.css\";\n\nconst Graphbox = ({ datasource }) => {\n  const [doughnutData, setDoughnutData] = useState(null);\n\n  useEffect(() => {\n    if (!datasource || !Array.isArray(datasource) || datasource.length === 0) {\n      return; // Ne rien faire si datasource est vide ou non défini\n    }\n\n    const labels = datasource.map((entry) => entry.nom_plante);\n    const data = datasource.map((entry) => entry.pourcentage_utilisation);\n    const backgroundColors = generateRandomColors(datasource.length);\n\n    const newDoughnutData = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Statistiques des plantes\",\n          data: data,\n          backgroundColor: backgroundColors,\n          hoverBackgroundColor: backgroundColors,\n        },\n      ],\n    };\n\n    setDoughnutData(newDoughnutData);\n  }, [datasource]);\n\n  const generateRandomColors = (count) => {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n      colors.push(color);\n    }\n    return colors;\n  };\n\n  return (\n    <div className=\"float-bloc-graph\">\n      <div className=\"greet\">\n        <div className=\"title\">Statistiques utilisation des plantes</div>\n        <div className=\"subtitle\">\n          Statistiques des plantes utilisées/plantées\n        </div>\n      </div>\n      {doughnutData && <Doughnut data={doughnutData} />}\n    </div>\n  );\n};\n\nexport default Graphbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtDF,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,UAAU,IAAI,CAACI,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,IAAIA,UAAU,CAACM,MAAM,KAAK,CAAC,EAAE;MACxE,OAAO,CAAC;IACV;IAEA,MAAMC,MAAM,GAAGP,UAAU,CAACQ,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;IAC1D,MAAMC,IAAI,GAAGX,UAAU,CAACQ,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACG,uBAAuB,CAAC;IACrE,MAAMC,gBAAgB,GAAGC,oBAAoB,CAACd,UAAU,CAACM,MAAM,CAAC;IAEhE,MAAMS,eAAe,GAAG;MACtBR,MAAM,EAAEA,MAAM;MACdS,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,0BAA0B;QACjCN,IAAI,EAAEA,IAAI;QACVO,eAAe,EAAEL,gBAAgB;QACjCM,oBAAoB,EAAEN;MACxB,CAAC;IAEL,CAAC;IAEDV,eAAe,CAACY,eAAe,CAAC;EAClC,CAAC,EAAE,CAACf,UAAU,CAAC,CAAC;EAEhB,MAAMc,oBAAoB,GAAIM,KAAK,IAAK;IACtC,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,EAAE,EAAE;MAC9B,MAAMC,KAAK,GAAG,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;MACrEN,MAAM,CAACO,IAAI,CAACL,KAAK,CAAC;IACpB;IACA,OAAOF,MAAM;EACf,CAAC;EAED,oBACEvB,OAAA;IAAK+B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BhC,OAAA;MAAK+B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBhC,OAAA;QAAK+B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjEpC,OAAA;QAAK+B,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAE1B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACLhC,YAAY,iBAAIJ,OAAA,CAACF,QAAQ;MAACe,IAAI,EAAET;IAAa;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/CIF,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}