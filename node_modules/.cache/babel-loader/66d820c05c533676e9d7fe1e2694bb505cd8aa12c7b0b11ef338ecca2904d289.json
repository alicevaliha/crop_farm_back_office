{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/react-results/crop-farm/src/component/card/statbox/Statbox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graphbox = ({\n  datasource\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Extrayez les labels et les données de votre datasource\n    const labels = datasource.map(entry => entry.mois.trim()); // Assurez-vous de supprimer les espaces inutiles\n    const data = datasource.map(entry => entry.total_recolte);\n\n    // Créez l'objet de données pour Chart.js\n    const monthlyHarvests = {\n      labels: labels,\n      datasets: [{\n        label: \"Récoltes mensuelles\",\n        data: data,\n        fill: false,\n        borderColor: \"rgb(75, 192, 192)\",\n        tension: 0.1\n      }]\n    };\n\n    // Création du graphique\n    const myChart = new Chart(chartRef.current, {\n      type: \"line\",\n      data: monthlyHarvests\n    });\n    return () => {\n      // Nettoyer le graphique lors du démontage du composant\n      myChart.destroy();\n    };\n  }, [datasource]); // Assurez-vous d'inclure datasource dans le tableau de dépendances\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"float-bloc-stat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Statistiques du mois\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"\\xC9volution des r\\xE9coltes mensuelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Graphbox, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Graphbox;\nexport default Graphbox;\nvar _c;\n$RefreshReg$(_c, \"Graphbox\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Graphbox","datasource","_s","chartRef","labels","map","entry","mois","trim","data","total_recolte","monthlyHarvests","datasets","label","fill","borderColor","tension","myChart","current","type","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/macbook/Documents/react-results/crop-farm/src/component/card/statbox/Statbox.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst Graphbox = ({ datasource }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    // Extrayez les labels et les données de votre datasource\n    const labels = datasource.map(entry => entry.mois.trim()); // Assurez-vous de supprimer les espaces inutiles\n    const data = datasource.map(entry => entry.total_recolte);\n\n    // Créez l'objet de données pour Chart.js\n    const monthlyHarvests = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Récoltes mensuelles\",\n          data: data,\n          fill: false,\n          borderColor: \"rgb(75, 192, 192)\",\n          tension: 0.1,\n        },\n      ],\n    };\n\n    // Création du graphique\n    const myChart = new Chart(chartRef.current, {\n      type: \"line\",\n      data: monthlyHarvests,\n    });\n\n    return () => {\n      // Nettoyer le graphique lors du démontage du composant\n      myChart.destroy();\n    };\n  }, [datasource]); // Assurez-vous d'inclure datasource dans le tableau de dépendances\n\n  return (\n    <div className=\"float-bloc-stat\">\n      <div className=\"greet\">\n        <div className=\"title\">Statistiques du mois</div>\n        <div className=\"subtitle\">Évolution des récoltes mensuelles</div>\n      </div>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default Graphbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAGH,UAAU,CAACI,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAMC,IAAI,GAAGR,UAAU,CAACI,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACI,aAAa,CAAC;;IAEzD;IACA,MAAMC,eAAe,GAAG;MACtBP,MAAM,EAAEA,MAAM;MACdQ,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,qBAAqB;QAC5BJ,IAAI,EAAEA,IAAI;QACVK,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,mBAAmB;QAChCC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;;IAED;IACA,MAAMC,OAAO,GAAG,IAAIpB,KAAK,CAACM,QAAQ,CAACe,OAAO,EAAE;MAC1CC,IAAI,EAAE,MAAM;MACZV,IAAI,EAAEE;IACR,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACAM,OAAO,CAACG,OAAO,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAACnB,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,oBACEF,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BvB,OAAA;MAAKsB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBvB,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjD3B,OAAA;QAAKsB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACN3B,OAAA;MAAQ4B,GAAG,EAAExB;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3CIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}